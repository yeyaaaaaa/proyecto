# Proyecto de Gestión de Citas, Pacientes y Resultados de Exámenes

## Descripción

Este proyecto es una aplicación web desarrollada en **ASP.NET Core** que permite la gestión de citas médicas, pacientes, exámenes de laboratorio, resultados y afiliaciones a EPS. Incluye roles diferenciados para administrador, enfermero y paciente, así como registro y autenticación de usuarios.

## Características principales

- Gestión de citas médicas (creación, reprogramación, historial, estados)
- Registro y administración de pacientes, enfermeros y administradores
- Módulo de afiliación a EPS (el admin crea la afiliación y el paciente posteriormente se registra)
- Gestión de exámenes de laboratorio (hemograma, orina, coprológico, etc.)
- Subida de resultados en PDF por parte del enfermero
- Visualización y descarga de resultados por el paciente
- Panel de administración para gestión de usuarios y estados
- Seguridad: autenticación, autorización y control de roles
- Soporte para archivos y directorio `wwwroot/Resultados` para PDFs

## Tecnologías utilizadas

- **ASP.NET Core** (WebApp, Razor Pages)
- **Entity Framework Core**
- **C#**
- **HTML5, CSS3, Bootstrap**
- **JavaScript**
- **MySQL** (o SQL Server, según configuración)
- **Identity y roles personalizados**
- **Librerías de manejo de archivos y validación**

## Estructura de carpetas destacada

- `Model/` — Modelos de datos (Cita, Paciente, Examen, Afiliacion, Resultado, etc)
- `Pages/` — Razor Pages (vistas y lógica de página)
- `Data/` — Contexto de EF Core
- `wwwroot/Resultados/` — Archivos PDF de resultados

## Instalación y configuración

1. **Clona el repositorio**  
   ```bash
   git clone https://github.com/yeyaaaaaa/proyecto.git
   cd proyecto
   ```

2. **Configura la base de datos**  
   Edita `appsettings.json` con tu cadena de conexión.  
   Ejecuta las migraciones si es necesario:
   ```bash
   dotnet ef database update
   ```

3. **Compila y ejecuta el proyecto**  
   ```bash
   dotnet build
   dotnet run
   ```

4. **Accede a la aplicación**  
   Usualmente en `http://localhost:5000` o el puerto configurado.

## Flujo de afiliación y registro de usuarios

- El **administrador** registra la afiliación de un paciente (tipo y número de documento, EPS).  
- El **usuario/paciente** se registra posteriormente validando que su afiliación existe y está activa.
- El **administrador** y **enfermero** pueden ser creados directamente desde el panel de admin.

## Gestión de exámenes

Ejemplo de exámenes precargados:

| ExamenID | Nombre                                   | Descripcion                                                                          | Estado |
|----------|------------------------------------------|--------------------------------------------------------------------------------------|--------|
| 1        | Hemograma completo                       | Análisis de sangre que mide glóbulos rojos, blancos y plaquetas.                     | 1      |
| 2        | Parcial de orina                         | Examen físico, químico y microscópico de la orina.                                   | 1      |
| 3        | Coprológico                              | Examen de heces para detectar parásitos, sangre oculta y otros parámetros.           | 1      |
| 4        | Citología cérvico-vaginal (Papanicolaou) | Detecta cambios celulares en el cuello uterino que pueden indicar cáncer.            | 1      |
| 5        | Prueba de VIH                            | Detección de anticuerpos o antígenos del virus de inmunodeficiencia humana.          | 1      |
| 6        | Cultivo de secreciones                   | Identifica microorganismos en muestras de secreciones humanas.                       | 1      |
| 7        | PCR COVID-19                             | Detecta la presencia del virus SARS-CoV-2 mediante reacción en cadena de la polimerasa.| 1    |

## Versiones y cambios principales

### v1.0.0
- Estructura base del proyecto, modelos principales, autenticación básica.

### v1.1.0
- Gestión completa de citas y pacientes.
- Panel de administración inicial.

### v1.2.0
- Implementación de roles y autorización.
- Módulo de exámenes y resultados.

### v1.3.0
- Subida de archivos PDF de resultados.
- Visualización y descarga de resultados.

### v1.4.0
- Corrección de flujo: el admin solo crea la afiliación, el usuario se registra posteriormente validando su afiliación.

### v1.5.0
- Limpieza de archivos temporales (`bin/`, `obj/`), .gitignore actualizado.
- Mejoras de seguridad y validación de archivos.
- Mejoras en migraciones y modelo de base de datos.

---

## Notas adicionales

- Asegúrate de que la carpeta `wwwroot/Resultados` tiene permisos de escritura para subir PDFs.
- Personaliza el `.gitignore` para evitar subir archivos de build y temporales.
- Para soporte, revisa los issues del repositorio o contacta al maintainer principal.

---

**Repositorio:**  
https://github.com/yeyaaaaaa/proyecto
