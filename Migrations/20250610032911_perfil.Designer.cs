// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto.Data;

#nullable disable

namespace proyecto.Migrations
{
    [DbContext(typeof(ProyectoDbContext))]
    [Migration("20250610032911_perfil")]
    partial class perfil
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Proyecto.Model.Afiliacion", b =>
                {
                    b.Property<int>("AfiliacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AfiliacionID"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EPSID")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AfiliacionID");

                    b.HasIndex("EPSID");

                    b.ToTable("Afiliaciones");
                });

            modelBuilder.Entity("Proyecto.Model.Cita", b =>
                {
                    b.Property<int>("CitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CitaID"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("EstadoID")
                        .HasColumnType("int");

                    b.Property<int>("ExamenID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.HasKey("CitaID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("ExamenID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Proyecto.Model.EPS", b =>
                {
                    b.Property<int>("EPSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EPSID"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EPSID");

                    b.ToTable("EPSs");
                });

            modelBuilder.Entity("Proyecto.Model.Enfermero", b =>
                {
                    b.Property<int>("EnfermeroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EnfermeroID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioFK")
                        .HasColumnType("int");

                    b.HasKey("EnfermeroID");

                    b.HasIndex("UsuarioFK");

                    b.ToTable("Enfermeros");
                });

            modelBuilder.Entity("Proyecto.Model.EstadoCita", b =>
                {
                    b.Property<int>("EstadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EstadoID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EstadoID");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Proyecto.Model.Examen", b =>
                {
                    b.Property<int>("ExamenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ExamenID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ExamenID");

                    b.ToTable("Examenes");
                });

            modelBuilder.Entity("Proyecto.Model.HistorialCita", b =>
                {
                    b.Property<int>("HistorialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("HistorialID"));

                    b.Property<int>("CitaID")
                        .HasColumnType("int");

                    b.Property<int>("EstadoAnterior")
                        .HasColumnType("int");

                    b.Property<int>("EstadoNuevo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime(6)");

                    b.HasKey("HistorialID");

                    b.HasIndex("CitaID");

                    b.HasIndex("EstadoAnterior");

                    b.HasIndex("EstadoNuevo");

                    b.ToTable("HistorialCitas");
                });

            modelBuilder.Entity("Proyecto.Model.LogSistema", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LogID"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("LogID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("LogsSistema");
                });

            modelBuilder.Entity("Proyecto.Model.Notificacion", b =>
                {
                    b.Property<int>("NotificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NotificacionID"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Leida")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("NotificacionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("Proyecto.Model.Paciente", b =>
                {
                    b.Property<int>("PacienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PacienteID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioFK")
                        .HasColumnType("int");

                    b.HasKey("PacienteID");

                    b.HasIndex("UsuarioFK");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Proyecto.Model.Reprogramacion", b =>
                {
                    b.Property<int>("ReprogramacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReprogramacionID"));

                    b.Property<int>("CitaID")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NuevaFecha")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ReprogramacionID");

                    b.HasIndex("CitaID");

                    b.ToTable("Reprogramaciones");
                });

            modelBuilder.Entity("Proyecto.Model.Resultado", b =>
                {
                    b.Property<int>("ResultadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ResultadoID"));

                    b.Property<string>("ArchivoPDF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CitaID")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ResultadoID");

                    b.HasIndex("CitaID")
                        .IsUnique();

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("Proyecto.Model.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RolID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Proyecto.Model.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("ContraseñaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioID");

                    b.HasIndex("RolID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto.Model.Afiliacion", b =>
                {
                    b.HasOne("Proyecto.Model.EPS", "EPS")
                        .WithMany("Afiliaciones")
                        .HasForeignKey("EPSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EPS");
                });

            modelBuilder.Entity("Proyecto.Model.Cita", b =>
                {
                    b.HasOne("Proyecto.Model.EstadoCita", "EstadoCita")
                        .WithMany("Citas")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Model.Examen", "Examen")
                        .WithMany("Citas")
                        .HasForeignKey("ExamenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Model.Paciente", "Paciente")
                        .WithMany("Citas")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCita");

                    b.Navigation("Examen");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Proyecto.Model.Enfermero", b =>
                {
                    b.HasOne("Proyecto.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto.Model.HistorialCita", b =>
                {
                    b.HasOne("Proyecto.Model.Cita", "Cita")
                        .WithMany("HistorialCitas")
                        .HasForeignKey("CitaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Model.EstadoCita", "EstadoAnteriorNavigation")
                        .WithMany("HistorialCitasAnterior")
                        .HasForeignKey("EstadoAnterior")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto.Model.EstadoCita", "EstadoNuevoNavigation")
                        .WithMany("HistorialCitasNuevo")
                        .HasForeignKey("EstadoNuevo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("EstadoAnteriorNavigation");

                    b.Navigation("EstadoNuevoNavigation");
                });

            modelBuilder.Entity("Proyecto.Model.LogSistema", b =>
                {
                    b.HasOne("Proyecto.Model.Usuario", "Usuario")
                        .WithMany("Logs")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto.Model.Notificacion", b =>
                {
                    b.HasOne("Proyecto.Model.Usuario", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto.Model.Paciente", b =>
                {
                    b.HasOne("Proyecto.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto.Model.Reprogramacion", b =>
                {
                    b.HasOne("Proyecto.Model.Cita", "Cita")
                        .WithMany("Reprogramaciones")
                        .HasForeignKey("CitaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("Proyecto.Model.Resultado", b =>
                {
                    b.HasOne("Proyecto.Model.Cita", "Cita")
                        .WithOne("Resultado")
                        .HasForeignKey("Proyecto.Model.Resultado", "CitaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("Proyecto.Model.Usuario", b =>
                {
                    b.HasOne("Proyecto.Model.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Proyecto.Model.Cita", b =>
                {
                    b.Navigation("HistorialCitas");

                    b.Navigation("Reprogramaciones");

                    b.Navigation("Resultado")
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto.Model.EPS", b =>
                {
                    b.Navigation("Afiliaciones");
                });

            modelBuilder.Entity("Proyecto.Model.EstadoCita", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("HistorialCitasAnterior");

                    b.Navigation("HistorialCitasNuevo");
                });

            modelBuilder.Entity("Proyecto.Model.Examen", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Proyecto.Model.Paciente", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Proyecto.Model.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Proyecto.Model.Usuario", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("Notificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
